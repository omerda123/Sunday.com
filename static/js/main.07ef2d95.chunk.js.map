{"version":3,"sources":["Components/Avatar.jsx","Components/Header.jsx","Components/UserMenu.jsx","Components/Profile.jsx","Components/ProgressBar.jsx","Components/Task.jsx","Components/TasksTable.jsx","Components/TasksList.jsx","Components/GridTask.jsx","Components/AddTask.jsx","Components/Home.jsx","Components/MainContainer.jsx","Components/LogInForm.jsx","App.js","serviceWorker.js","index.js"],"names":["Avatar","props","onMouseEnter","toggleUserMenu","src","image","className","alt","Header","to","icon","faBell","loggedInUser","avatar","UserMenu","onMouseLeave","onClick","logOut","Profile","console","log","faEdit","userId","userName","password","privateName","surName","ProgressBar","innerStyle","width","style","Task","user","users","find","assignee","key","taskId","tableClass","taskName","priority","progress","TasksTable","tasks","map","iteration","index","createTableAnimation","iterationName","toggleAddUserMenu","faPlusSquare","task","assigneeId","TasksList","value","GridTask","AddTask","type","onChange","e","handleChange","addTask","Home","toggleView","faListAlt","faThLarge","listView","addTaskMenu","MainContainer","exact","path","LogInForm","name","id","onBlur","retries","validateUser","href","userFound","App","state","notifications","numOfRetries","loggedIn","userMenu","this","setState","_tasks","push","target","parseInt","searchUser","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07ef2d95.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Avatar(props) {\r\n    return (\r\n        <span>\r\n            <img onMouseEnter={props.toggleUserMenu} src={props.image} className=\"avatar\" alt={props.image}></img>\r\n        </span>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Avatar from './Avatar';\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faBell } from '@fortawesome/free-regular-svg-icons'\r\n\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"nav-bar\">\r\n            <div className=\"top-left\">\r\n                <span>\r\n                    <Link to=\"/\"><img src=\"http://s3.amazonaws.com/general-assets/monday-200x200.png\" alt=\"Logo\" className=\"logo\"/> </Link> </span>\r\n                <span> Sunday.com </span>\r\n                <span>\r\n                &nbsp; &nbsp;   <FontAwesomeIcon className=\"notification\" icon={faBell}></FontAwesomeIcon>\r\n                </span>\r\n            </div>\r\n            <div className=\"top-right\">\r\n                <Avatar image={props.loggedInUser.avatar} toggleUserMenu={props.toggleUserMenu}></Avatar>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function UserMenu(props) {\r\n    return (\r\n        <div className=\"user-menu\" onMouseLeave={()=> props.toggleUserMenu()}>\r\n           <Link to=\"/profile\">profile</Link>\r\n            <hr></hr>\r\n            <Link to=\"/\" onClick={()=>props.logOut()}> Log out</Link> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faEdit } from '@fortawesome/free-regular-svg-icons'\r\n\r\nexport default function Profile(props) {\r\n    console.log(props.loggedInUser);\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <h1> Profile &nbsp;\r\n            <FontAwesomeIcon  icon={faEdit} />\r\n\r\n            </h1>\r\n            <div> <span className=\"profile-key\">User ID:</span> {props.loggedInUser.userId} </div>\r\n            <div> <span className=\"profile-key\"> User Name:</span> {props.loggedInUser.userName}</div>\r\n            <div> <span className=\"profile-key\">Password:</span>   {props.loggedInUser.password}</div>\r\n            <div> <span className=\"profile-key\">Private Name:</span>  {props.loggedInUser.privateName}</div>\r\n            <div> <span className=\"profile-key\">Last Name:</span>  {props.loggedInUser.surName}</div>\r\n            <div> <span className=\"profile-key\">Avatar URL:</span>  {props.loggedInUser.avatar}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ProgressBar(props) {\r\n    const innerStyle={\r\n        width:`${props.width}`\r\n    }\r\n    return (\r\n        <div className=\"progress-bar\">\r\n            <div className=\"progress-bar-inner\" style={innerStyle}></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Avatar from './Avatar'\r\nimport ProgressBar from './ProgressBar'\r\n\r\n\r\nexport default function Task(props) {\r\n    let user = props.users.find(user => user.userId === props.assignee);\r\n    return (\r\n        <>\r\n            <tr key={props.taskId} className={props.tableClass}>\r\n                <td className=\"purple\" ><div></div></td>\r\n                <td className={props.tableClass}><div>\r\n                    {props.taskName}\r\n                    </div>\r\n                        </td>\r\n                <td><div><Avatar image={user.avatar}></Avatar></div></td>\r\n                <td className={props.priority}><div> {props.priority}</div></td>\r\n                <td className=\"timeline\"><ProgressBar width={props.progress}></ProgressBar></td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Task from './Task'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusSquare } from '@fortawesome/free-regular-svg-icons'\r\n\r\n\r\nexport default function TasksTable(props) {\r\n    return (\r\n        <div>\r\n            {\r\n                props.tasks.map((iteration, index) => {\r\n                    return (\r\n                        <table key={index}>\r\n                            <thead>\r\n                                <tr key={index * 10}>\r\n                                    <th width=\"3px\"></th>\r\n                                    <th width=\"300px\" className='week-header'>\r\n                                       <span onClick={()=> props.createTableAnimation()}> {iteration.iterationName} </span>\r\n                                       <span onClick={()=> props.toggleAddUserMenu(iteration.iterationName)}> <FontAwesomeIcon icon={faPlusSquare}></FontAwesomeIcon></span>\r\n                        </th>\r\n                                    <th width=\"60px\">\r\n                                        Person\r\n                        </th>\r\n                                    <th width=\"70px\">\r\n                                        Priority\r\n                        </th>\r\n                                    <th width=\"200px\">\r\n                                        Timeline\r\n                        </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {iteration.tasks.map(task => {\r\n                                    return (<Task tableClass= {props.tableClass} taskId={task.taskId} taskName={task.taskName} progress={task.progress} priority={task.priority} assignee={task.assigneeId} users={props.users}></Task>)\r\n                                })\r\n                                }\r\n\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    )\r\n                }\r\n\r\n\r\n                )\r\n            }\r\n        </div>)\r\n}","import React from 'react'\r\nimport TasksTable from './TasksTable'\r\n\r\n\r\nexport default function TasksList(props) {\r\n    return (\r\n        <div  className=\"tasks-menu\">\r\n            <TasksTable \r\n            toggleAddUserMenu = {(value)=>props.toggleAddUserMenu(value)}\r\n            tasks={props.tasks} \r\n            users={props.users}\r\n            createTableAnimation={()=> props.createTableAnimation()}\r\n            tableClass= {props.tableClass}\r\n            ></TasksTable>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Avatar from './Avatar'\r\n\r\nexport default function GridTask(props) {\r\n    return (\r\n        <div className=\"tasks-menu\">\r\n            <div className=\"tasks-wrapper\">\r\n                {\r\n                    props.users.map(user => {\r\n                        return (<div className=\"grid-row\">\r\n                    <div className=\"grid-name\">{user.privateName} {user.surName}</div>\r\n                            <div><Avatar image={user.avatar}></Avatar></div>\r\n                            {\r\n                                props.tasks.map(iteration => {\r\n                                    return (\r\n                                        iteration.tasks.map(task => {\r\n                                            if (task.assigneeId === user.userId)\r\n                                                return (\r\n                                                    <div className=\"task-box\">\r\n                                                        {task.taskName}\r\n                                                    </div>\r\n                                                )\r\n                                        })\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>)\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function AddTask(props) {\r\n    return (\r\n        <div className=\"add-task-form\">\r\n                Task Name <input type=\"text\" onChange={(e, value) => props.handleChange(e, \"taskName\")}></input> \r\n                Assignee Id <input type=\"text\" onChange={(e, value) => props.handleChange(e, \"assigneeId\")}></input>\r\n                Priority <input type=\"text\" onChange={(e, value) => props.handleChange(e, \"priority\")}></input>\r\n                Progress <input type=\"text\" onChange={(e, value) => props.handleChange(e, \"progress\")}></input>\r\n                <button onClick={()=> props.addTask()}>Submit</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TasksList from './TasksList'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faListAlt } from '@fortawesome/free-regular-svg-icons'\r\nimport { faThLarge } from '@fortawesome/free-solid-svg-icons'\r\nimport GridTask from './GridTask'\r\nimport AddTask from './AddTask'\r\n\r\nexport default function Home(props) {\r\n    return (\r\n        <div className=\"main-container\">\r\n\r\n            <div>\r\n                <div className=\"icons\">\r\n                    <FontAwesomeIcon onClick={() => props.toggleView(true)} icon={faListAlt} />\r\n                    <FontAwesomeIcon onClick={() => props.toggleView(false)} icon={faThLarge} />\r\n                </div>\r\n                <div> <h1> Team Tasks</h1></div>\r\n                {\r\n                    props.listView ?\r\n                        <>\r\n                            <TasksList\r\n                                toggleAddUserMenu= {(value)=>props.toggleAddUserMenu(value)}\r\n                                tasks={props.tasks}\r\n                                users={props.users}\r\n                                createTableAnimation={() => props.createTableAnimation()}\r\n                                tableClass={props.tableClass}\r\n                            ></TasksList>\r\n                            {props.addTaskMenu?\r\n                            <AddTask  addTask={()=>props.addTask()} handleChange={(e, value) => props.handleChange(e, value)}></AddTask>:\r\n                            null\r\n                            }\r\n                        </>\r\n                        :\r\n                        <GridTask tasks={props.tasks} users={props.users}></GridTask>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport Profile from './Profile'\r\nimport Home from './Home'\r\n\r\nexport default function MainContainer(props) {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Home \r\n                addTaskMenu = {props.addTaskMenu}\r\n                addTask = {()=>props.addTask()}\r\n                toggleAddUserMenu={(value)=> props.toggleAddUserMenu(value)}\r\n                tasks={props.tasks} \r\n                users={props.users}\r\n                toggleView={props.toggleView} \r\n                listView={props.listView}\r\n                createTableAnimation={()=> props.createTableAnimation()}\r\n                tableClass= {props.tableClass}\r\n                handleChange={(e, value) => props.handleChange(e, value)}\r\n                >\r\n\r\n                </Home>\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n                <Profile loggedInUser={props.loggedInUser}></Profile>\r\n            </Route>\r\n\r\n\r\n        </Switch>\r\n\r\n\r\n    )\r\n\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport default function LogInForm(props) {\r\n    return (\r\n        <div className=\"log-in-form\">\r\n            <div className=\"login-container\">\r\n                <div className=\"login-logo\">\r\n                    <img src=\"http://s3.amazonaws.com/general-assets/monday-200x200.png\" alt=\"Logo\" />\r\n                </div>\r\n\r\n                <div className=\"login-form\">\r\n\r\n                    User name <input type=\"text\" name=\"userName\" id=\"userName\" onBlur={(e) => props.handleChange(e, \"userName\")} />\r\n                    Password  <input type=\"password\" name=\"password\" id=\"password\" onBlur={(e) => props.handleChange(e, \"password\")} />\r\n                    {\r\n                        (props.retries === 0)?\r\n                        null:\r\n                        <button className=\"login-button\" onClick={() => props.validateUser()}> Log in</button>\r\n                        \r\n                    }\r\n                    <a href=\"google.com\">Forgot your password?</a>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"login-error\">\r\n                {(props.retries < 3 && props.retries > 0) ?\r\n                    <p>Login failed you have more {props.retries} retries</p> : null\r\n                }\r\n                {\r\n                    (props.retries === 0) ?\r\n                        <p>User locked</p> : null\r\n                }\r\n                {\r\n                    (props.userFound)? \r\n                    null:\r\n                    <p> user not found</p>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css'\nimport './animations.css'\nimport Header from './Components/Header';\nimport UserMenu from './Components/UserMenu';\nimport MainContainer from './Components/MainContainer';\nimport LogInForm from './Components/LogInForm'\nimport tasks from './Data/tasks.json'\nimport users from './Data/users.json'\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\n\nexport default class App extends Component {\n  iterationName = \"\";\n  userName = \"\"\n  password = \"\"\n  taskName = \"\"\n  assigneeId = 1\n  priority=\"\"\n  progress =\"\"\n  state = {\n    notifications: [],\n    taskId: 7,\n    tableClass: \"active\",\n    listView: true,\n    addTaskMenu: false,\n    loggedInUser: {},\n    numOfRetries: 3,\n    userFound: true,\n    loggedIn: false,  // convert to false\n    userMenu: false,\n    tasks: tasks,\n    users: users\n  }\n  toggleUserMenu() {\n    this.setState({ userMenu: !this.state.userMenu })\n  }\n  toggleAddUserMenu(iterationName) {\n    this.setState({ addTaskMenu: !this.state.addTaskMenu });\n    this.iterationName = iterationName;\n    console.log(iterationName);\n    \n  }\n  addTask() {\n    const _tasks = [...this.state.tasks];\n    const currentIteration = _tasks.find(iteration => iteration.iterationName === this.iterationName)\n    // console.log(currentIteration.tasks);\n    currentIteration.tasks.push(\n      {\n        \"taskId\": this.state.taskId,\n        \"taskName\": this.taskName,\n        \"assigneeId\": this.assigneeId,\n        \"priority\": this.priority,\n        \"progress\": this.progress\n      }\n    )\n\n    this.setState({\n      tasks:_tasks,\n      taskId: this.state.taskId +1 ,\n      addTaskMenu:false})\n  }\n  handleChange(e, value) {\n    switch (value) {\n      case \"userName\":    this.userName = e.target.value; break;\n      case \"password\":    this.password = e.target.value; break;\n      case \"taskName\":    this.taskName = e.target.value; break;\n      case \"assigneeId\":  this.assigneeId = parseInt(e.target.value); break;\n      case \"priority\":  this.priority = e.target.value; break;\n      case \"progress\":  this.progress = e.target.value; break;\n      default: console.log(\"error with input\");\n      \n    }\n\n  }\n  validateUser() {\n    let searchUser = this.state.users.find(user => user.userName === this.userName);\n    if (searchUser) {\n      this.setState({ userFound: true })\n      if ((this.userName === searchUser.userName) && (this.password === searchUser.password)) {\n        this.setState({ loggedIn: true, loggedInUser: searchUser })\n      }\n      else {\n        this.setState({ numOfRetries: this.state.numOfRetries - 1 })\n      }\n    }\n    else {\n      this.setState({ userFound: false })\n    }\n\n  }\n\n  toggleView(listView) {\n    this.setState({ listView: listView })\n  }\n\n  logOut() {\n    this.setState({ loggedIn: false })\n  }\n\n  createTableAnimation() {\n    if (this.state.tableClass === \"active\")\n      this.setState({ tableClass: \"\" })\n    else\n      this.setState({ tableClass: \"active\" })\n  }\n\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Router>\n          <Header toggleUserMenu={() => this.toggleUserMenu()} loggedInUser={this.state.loggedInUser}></Header>\n          {\n            this.state.userMenu ?\n              <UserMenu logOut={() => this.logOut()} toggleUserMenu={() => this.toggleUserMenu()}></UserMenu> : null\n          }\n          {\n            this.state.loggedIn ? null :\n              <LogInForm userFound={this.state.userFound} retries={this.state.numOfRetries} handleChange={(e, value) => this.handleChange(e, value)} validateUser={() => this.validateUser()}></LogInForm>\n          }\n          <MainContainer\n            handleChange={(e, value) => this.handleChange(e, value)}\n            addTaskMenu={this.state.addTaskMenu}\n            addTask={()=> this.addTask()}\n            toggleAddUserMenu={(value) => this.toggleAddUserMenu(value)}\n            createTableAnimation={() => this.createTableAnimation()}\n            tableClass={this.state.tableClass}\n            loggedInUser={this.state.loggedInUser}\n            users={this.state.users}\n            tasks={this.state.tasks}\n            toggleView={(listView) => this.toggleView(listView)}\n            listView={this.state.listView}\n          ></MainContainer>\n\n        </Router>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}