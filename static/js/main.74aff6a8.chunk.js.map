{"version":3,"sources":["Components/Avatar.jsx","Components/Header.jsx","Components/UserMenu.jsx","Components/ProgressBar.jsx","Components/Task.jsx","Components/TasksTable.jsx","Components/TasksList.jsx","Components/MainContainer.jsx","Components/LogInForm.jsx","App.js","serviceWorker.js","index.js"],"names":["Avatar","props","onMouseEnter","toggleUserMenu","src","image","className","alt","Header","UserMenu","onMouseLeave","key","ProgressBar","innerStyle","width","style","Task","user","users","find","userId","assignee","taskId","taskName","avatar","priority","progress","TasksTable","tasks","map","iteration","index","iterationName","task","Progress","assigneeId","TasksList","MainContainer","LogInForm","type","name","id","onBlur","e","handleChange","retries","onClick","validateUser","href","userFound","App","userName","password","state","numOfRetries","loggedIn","userMenu","this","setState","value","target","searchUser","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+3DAEe,SAASA,EAAOC,GAC3B,OACI,8BACI,yBAAKC,aAAcD,EAAME,eAAgBC,IAAKH,EAAMI,MAAOC,UAAU,SAASC,IAAKN,EAAMI,SCFtF,SAASG,EAAOP,GAC3B,OACI,yBAAKK,UAAU,WACX,yBAAKA,UAAU,YACX,kCAAO,yBAAKF,IAAI,4DAA4DG,IAAI,OAAOD,UAAU,SAAjG,KACA,0CACA,8BACI,yBAAKF,IAAI,mDAAmDE,UAAU,eAAeC,IAAI,mBAGjG,yBAAKD,UAAU,aACX,kBAACN,EAAD,CAAQK,MAAM,uEAAuEF,eAAgBF,EAAME,mB,MCZ5G,SAASM,EAASR,GAC7B,OACI,yBAAKK,UAAU,YAAYI,aAAc,kBAAKT,EAAME,mBAChD,wBAAIQ,IAAI,KAAR,aACA,6BACA,wBAAIA,IAAI,KAAR,cCLG,SAASC,EAAYX,GAChC,IAAMY,EAAW,CACbC,MAAM,GAAD,OAAIb,EAAMa,QAEnB,OACI,yBAAKR,UAAU,gBACX,yBAAKA,UAAU,qBAAqBS,MAAOF,KCHxC,SAASG,EAAKf,GACzB,IAAIgB,EAAOhB,EAAMiB,MAAMC,MAAK,SAAAF,GAAI,OAAIA,EAAKG,SAAWnB,EAAMoB,YAC1D,OACI,oCACI,wBAAIV,IAAKV,EAAMqB,QACX,wBAAIhB,UAAU,WACd,4BACKL,EAAMsB,UAEX,4BAAI,kBAACvB,EAAD,CAAQK,MAAOY,EAAKO,UACxB,wBAAIlB,UAAWL,EAAMwB,UAArB,IAAiCxB,EAAMwB,UACvC,wBAAInB,UAAU,YAAW,kBAACM,EAAD,CAAaE,MAAOb,EAAMyB,cCbpD,SAASC,EAAW1B,GAC/B,OACI,6BAEQA,EAAM2B,MAAMC,KAAI,SAACC,EAAWC,GACxB,OACI,2BAAOpB,IAAKoB,GACR,+BACI,wBAAIpB,IAAa,GAARoB,GACL,wBAAIjB,MAAM,QACV,wBAAIA,MAAM,QAAQR,UAAU,eACvBwB,EAAUE,eAEf,wBAAIlB,MAAM,QAAV,UAGA,wBAAIA,MAAM,QAAV,YAGA,wBAAIA,MAAM,SAAV,cAKR,+BACKgB,EAAUF,MAAMC,KAAI,SAAAI,GACjB,OAAQ,kBAACjB,EAAD,CAAMM,OAAQW,EAAKX,OAAQC,SAAUU,EAAKV,SAAUG,SAAUO,EAAKC,SAAUT,SAAUQ,EAAKR,SAAUJ,SAAUY,EAAKE,WAAYjB,MAAOjB,EAAMiB,iBCzB3K,SAASkB,EAAUnC,GAC9B,OACI,yBAAMK,UAAU,cACZ,2CACA,kBAACqB,EAAD,CAAYC,MAAO3B,EAAM2B,MAAOV,MAAOjB,EAAMiB,SCN1C,SAASmB,EAAcpC,GAClC,OACI,yBAAKK,UAAU,kBACX,kBAAC8B,EAAD,CAAWR,MAAO3B,EAAM2B,MAAOV,MAAOjB,EAAMiB,SCHzC,SAASoB,EAAUrC,GAC9B,OACI,yBAAKK,UAAU,eACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,cACX,yBAAKF,IAAI,4DAA4DG,IAAI,UAG7E,yBAAKD,UAAU,cAAf,aAEc,2BAAOiC,KAAK,OAAOC,KAAK,WAAWC,GAAG,WAAWC,OAAQ,SAACC,GAAD,OAAO1C,EAAM2C,aAAaD,EAAG,eAFpG,aAGc,2BAAOJ,KAAK,WAAWC,KAAK,WAAWC,GAAG,WAAWC,OAAQ,SAACC,GAAD,OAAO1C,EAAM2C,aAAaD,EAAG,eAE7E,IAAlB1C,EAAM4C,QACP,KACA,4BAAQvC,UAAU,eAAewC,QAAS,kBAAM7C,EAAM8C,iBAAtD,WAGJ,uBAAGC,KAAK,cAAR,2BAIR,yBAAK1C,UAAU,eACTL,EAAM4C,QAAU,GAAK5C,EAAM4C,QAAU,EACnC,yDAA+B5C,EAAM4C,QAArC,YAA4D,KAGzC,IAAlB5C,EAAM4C,QACH,0CAAqB,KAGxB5C,EAAMgD,UACP,KACA,gD,kBC1BCC,E,2MAEnBC,SAAS,G,EACTC,SAAS,G,EACTC,MAAQ,CACNC,aAAa,EACbL,WAAU,EACVM,UAAU,EACVC,UAAU,EACV5B,MAAOA,EACPV,MAAOA,G,gFAGPuC,KAAKC,SAAS,CAAEF,UAAWC,KAAKJ,MAAMG,a,mCAE3Bb,EAAGgB,GACL,aAARA,EACCF,KAAKN,SAAWR,EAAEiB,OAAOD,MACzBF,KAAKL,SAAWT,EAAEiB,OAAOD,Q,qCAEb,IAAD,OACTE,EAAaJ,KAAKJ,MAAMnC,MAAMC,MAAK,SAAAF,GAAI,OAAIA,EAAKkC,WAAa,EAAKA,YACnEU,GACDJ,KAAKC,SAAS,CAACT,WAAU,IACpBQ,KAAKN,WAAaU,EAAWV,UAAcM,KAAKL,WAAaS,EAAWT,SAC3EK,KAAKC,SAAS,CAAEH,UAAU,IAG1BE,KAAKC,SAAS,CAACJ,aAAcG,KAAKJ,MAAMC,aAAc,KAIxDG,KAAKC,SAAS,CAACT,WAAU,M,6EASnB,IAAD,OACP,OACE,yBAAK3C,UAAU,WACb,kBAACE,EAAD,CAAQL,eAAgB,kBAAM,EAAKA,oBAEjCsD,KAAKJ,MAAMG,SACT,kBAAC/C,EAAD,CAAUN,eAAgB,kBAAM,EAAKA,oBAAgC,KAGvEsD,KAAKJ,MAAME,SAAW,KACpB,kBAACjB,EAAD,CAAWW,UAAWQ,KAAKJ,MAAMJ,UAAWJ,QAAUY,KAAKJ,MAAMC,aAAcV,aAAc,SAACD,EAAEgB,GAAH,OAAa,EAAKf,aAAaD,EAAEgB,IAAQZ,aAAc,kBAAM,EAAKA,kBAEnK,kBAACV,EAAD,CAAenB,MAAOuC,KAAKJ,MAAMnC,MAAOU,MAAO6B,KAAKJ,MAAMzB,a,GArDjCkC,aCGbC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.74aff6a8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Avatar(props) {\r\n    return (\r\n        <span>\r\n            <img onMouseEnter={props.toggleUserMenu} src={props.image} className=\"avatar\" alt={props.image}></img>\r\n        </span>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Avatar from './Avatar';\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"nav-bar\">\r\n            <div className=\"top-left\">\r\n                <span> <img src=\"http://s3.amazonaws.com/general-assets/monday-200x200.png\" alt=\"Logo\" className=\"logo\"/> </span>\r\n                <span> Sunday </span>\r\n                <span>\r\n                    <img src=\"http://cdn.onlinewebfonts.com/svg/img_207399.png\" className=\"notification\" alt=\"notification\"></img>\r\n                </span>\r\n            </div>\r\n            <div className=\"top-right\">\r\n                <Avatar image=\"https://pickaface.net/gallery/avatar/20151109_144853_2380_sample.png\" toggleUserMenu={props.toggleUserMenu}></Avatar>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function UserMenu(props) {\r\n    return (\r\n        <div className=\"user-menu\" onMouseLeave={()=> props.toggleUserMenu()}>\r\n            <li key=\"1\"> profile </li>\r\n            <hr></hr>\r\n            <li key=\"2\"> Log out </li>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ProgressBar(props) {\r\n    const innerStyle={\r\n        width:`${props.width}`\r\n    }\r\n    return (\r\n        <div className=\"progress-bar\">\r\n            <div className=\"progress-bar-inner\" style={innerStyle}></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Avatar from './Avatar'\r\nimport ProgressBar from './ProgressBar'\r\n\r\n\r\nexport default function Task(props) {\r\n    let user = props.users.find(user => user.userId === props.assignee);\r\n    return (\r\n        <>\r\n            <tr key={props.taskId}>\r\n                <td className=\"purple\"></td>\r\n                <td>\r\n                    {props.taskName}\r\n                        </td>\r\n                <td><Avatar image={user.avatar}></Avatar></td>\r\n                <td className={props.priority}> {props.priority}</td>\r\n                <td className=\"timeline\"><ProgressBar width={props.progress}></ProgressBar></td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Task from './Task'\r\n\r\nexport default function TasksTable(props) {\r\n    return (\r\n        <div>\r\n            {\r\n                props.tasks.map((iteration, index) => {\r\n                    return (\r\n                        <table key={index}>\r\n                            <thead>\r\n                                <tr key={index * 10}>\r\n                                    <th width=\"3px\"></th>\r\n                                    <th width=\"300px\" className='week-header'>\r\n                                        {iteration.iterationName}\r\n                        </th>\r\n                                    <th width=\"60px\">\r\n                                        Person\r\n                        </th>\r\n                                    <th width=\"70px\">\r\n                                        Priority\r\n                        </th>\r\n                                    <th width=\"200px\">\r\n                                        Timeline\r\n                        </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {iteration.tasks.map(task => {\r\n                                    return (<Task taskId={task.taskId} taskName={task.taskName} progress={task.Progress} priority={task.priority} assignee={task.assigneeId} users={props.users}></Task>)\r\n                                })\r\n                                }\r\n\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    )\r\n                }\r\n\r\n\r\n                )\r\n            }\r\n        </div>)\r\n}","import React from 'react'\r\nimport TasksTable from './TasksTable'\r\n\r\n\r\nexport default function TasksList(props) {\r\n    return (\r\n        <div  className=\"tasks-menu\">\r\n            <h1> Team tasks</h1>\r\n            <TasksTable tasks={props.tasks} users={props.users}></TasksTable>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TasksList from './TasksList'\r\nexport default function MainContainer(props) {\r\n    return (\r\n        <div className=\"main-container\">\r\n            <TasksList tasks={props.tasks} users={props.users}></TasksList>\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function LogInForm(props) {\r\n    return (\r\n        <div className=\"log-in-form\">\r\n            <div className=\"login-container\">\r\n                <div className=\"login-logo\">\r\n                    <img src=\"http://s3.amazonaws.com/general-assets/monday-200x200.png\" alt=\"Logo\" />\r\n                </div>\r\n\r\n                <div className=\"login-form\">\r\n\r\n                    User name <input type=\"text\" name=\"userName\" id=\"userName\" onBlur={(e) => props.handleChange(e, \"userName\")} />\r\n                    Password  <input type=\"password\" name=\"password\" id=\"password\" onBlur={(e) => props.handleChange(e, \"password\")} />\r\n                    {\r\n                        (props.retries === 0)?\r\n                        null:\r\n                        <button className=\"login-button\" onClick={() => props.validateUser()}> Log in</button>\r\n                        \r\n                    }\r\n                    <a href=\"google.com\">Forgot your password?</a>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"login-error\">\r\n                {(props.retries < 3 && props.retries > 0) ?\r\n                    <p>Login failed you have more {props.retries} retries</p> : null\r\n                }\r\n                {\r\n                    (props.retries === 0) ?\r\n                        <p>User locked</p> : null\r\n                }\r\n                {\r\n                    (props.userFound)? \r\n                    null:\r\n                    <p> user not found</p>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\nimport Header from './Components/Header';\nimport './App.css'\nimport UserMenu from './Components/UserMenu';\nimport MainContainer from './Components/MainContainer';\nimport LogInForm from './Components/LogInForm'\nimport tasks from './Data/tasks.json'\nimport users from './Data/users.json'\n\nexport default class App extends Component {\n\n  userName=\"\"\n  password=\"\"\n  state = {\n    numOfRetries:3,\n    userFound:true,\n    loggedIn: false,\n    userMenu: false,\n    tasks: tasks,\n    users: users\n  }\n  toggleUserMenu() {\n    this.setState({ userMenu: !this.state.userMenu })\n  }\n  handleChange(e, value) {\n    (value===\"userName\")?\n      this.userName = e.target.value:\n      this.password = e.target.value;\n  }\n  validateUser() {\n    let searchUser = this.state.users.find(user => user.userName === this.userName);\n    if(searchUser){\n      this.setState({userFound:true})\n      if ((this.userName === searchUser.userName) && (this.password === searchUser.password)) {\n        this.setState({ loggedIn: true })\n      }\n      else{\n        this.setState({numOfRetries: this.state.numOfRetries- 1})\n      }\n    }\n    else{\n      this.setState({userFound:false})\n    }\n\n  }\n\n  componentDidUpdate(){\n  \n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Header toggleUserMenu={() => this.toggleUserMenu()}></Header>\n        {\n          this.state.userMenu ?\n            <UserMenu toggleUserMenu={() => this.toggleUserMenu()}></UserMenu> : null\n        }\n        {\n          this.state.loggedIn ? null :\n            <LogInForm userFound={this.state.userFound} retries= {this.state.numOfRetries} handleChange={(e,value) => this.handleChange(e,value)} validateUser={() => this.validateUser()}></LogInForm>\n        }\n        <MainContainer users={this.state.users} tasks={this.state.tasks}></MainContainer>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}